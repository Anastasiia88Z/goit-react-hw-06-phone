{"version":3,"sources":["components/ListContacts/ListContacts.module.css","components/Filter/Filter.module.css","components/App/App.module.css","components/Container/Container.module.css","redux/contacts-actions.js","redux/contacts-reducers.js","redux/store.js","components/Container/Container.jsx","components/Form/Form.jsx","redux/contacts-selectors.js","components/ListContacts/ListContacts.jsx","components/Filter/Filter.jsx","components/App/App.js","index.js","components/Form/Form.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","uuidv4","deleteContact","changeFilter","items","createReducer","initialContacts","state","isNameExist","find","contact","toLowerCase","isNumberExist","alert","filter","_state","combineReducers","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","contacts","persistReducer","contactReducer","devTools","process","middleware","curryGetDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","Container","children","className","s","container","Form","dispatch","useDispatch","useState","setName","setNumber","handleChange","e","target","value","form","onSubmit","preventDefault","label","input","type","pattern","title","required","onChange","placeholder","button","getFilter","getVisibleContacts","allContacts","getContacts","normalizeFilter","includes","ListContacts","useSelector","list","map","item","onClick","Filter","onBlur","App","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.985a46ea.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ListContacts_button__MHAjx\",\"item\":\"ListContacts_item__sHBp2\",\"list\":\"ListContacts_list__1K7oa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__2ymuA\",\"label\":\"Filter_label__132QX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__1xoh8\",\"contacts\":\"App_contacts__-kFW7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__lfNtv\"};","import { createAction } from '@reduxjs/toolkit';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport const addContact = createAction(\n  'contacts/addContact',\n  (name, number) => {\n    return {\n      payload: {\n        id: uuidv4(),\n        name,\n        number,\n      },\n    };\n  },\n);\n\nexport const deleteContact = createAction('contacts/deleteContact');\n\nexport const changeFilter = createAction('contacts/changeFilter');\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport { combineReducers } from \"redux\";\r\nimport { addContact, deleteContact, changeFilter } from './contacts-actions';\r\nimport initialContacts from '../data/initialContacts.json'\r\n\r\nconst items = createReducer(initialContacts, {\r\n  [addContact]: (state, {payload}) => {\r\n    const isNameExist = state.find(\r\n      contact => contact.name.toLowerCase() === payload.name.toLowerCase(),\r\n    )\r\n\r\n    const isNumberExist = state.find(\r\n      contact => contact.number === payload.number,\r\n    );\r\n    if (isNameExist) {\r\n      alert(`${payload.name} is already in contacts`);\r\n      return state;\r\n    }\r\n    if (isNumberExist) {\r\n      alert(`${payload.number} is already in contacts`);\r\n      return state;\r\n    }\r\n    return [payload, ...state];\r\n  },\r\n\r\n  [deleteContact]: (state, {payload}) => \r\n  state.filter(contact => contact.id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_state, { payload}) => payload,\r\n}); \r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport contactReducer from \"./contacts-reducers\";\r\n\r\n\r\nconst contactsPersistConfig = {\r\n key: 'contacts',\r\n storage,\r\n blacklist: ['filter'],\r\n}\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(contactsPersistConfig, contactReducer),\r\n  },\r\n  devTools:process.env.NODE_ENV !== 'production',\r\n  middleware: curryGetDefaultMiddleware =>\r\n    curryGetDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH,REHYDRATE,PAUSE,PERSIST,PURGE,REGISTER]\r\n      },\r\n  }),\r\n});\r\n\r\nexport const persistor = persistStore(store);","import s from './Container.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Container({ children }) {\r\n  return <div className={s.container}>{children}</div>;\r\n}\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from '../../redux/contacts-actions';\nimport s from './Form.module.css';\n\nexport default function Form() {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = e => {\n    const { name, value = '' } = e.target;\n    name === 'name' ? setName(value) : setNumber(value);\n  };\n\n  const resetState = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(addContact(name, number));\n    resetState();\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label}>\n        Name\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          onChange={handleChange}\n          value={name}\n          placeholder=\"Annie Copeland\"\n        />\n      </label>\n\n      <label className={s.label}>\n        Number\n        <input\n          className={s.input}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          onChange={handleChange}\n          value={number}\n          placeholder=\"227-91-26\"\n        />\n      </label>\n\n      <button className={s.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n","export const getContacts = state => state.contacts.items;\r\nexport const getFilter = state => state.contacts.filter;\r\n\r\nexport const getVisibleContacts = state => {\r\n  const allContacts = getContacts(state);\r\n  const filter = getFilter(state);\r\n  const normalizeFilter = filter.toLowerCase();\r\n\r\n  return allContacts.filter(({ name}) => \r\n  name.toLowerCase().includes(normalizeFilter),\r\n  );\r\n};","import { useDispatch, useSelector } from 'react-redux';\r\nimport { deleteContact } from '../../redux/contacts-actions';\r\nimport { getVisibleContacts } from '../../redux/contacts-selectors';\r\nimport s from './ListContacts.module.css';\r\n\r\n\r\nfunction ListContacts() {\r\n  const dispatch = useDispatch();\r\n\r\n  const contacts = useSelector(getVisibleContacts);\r\n  return (\r\n   <ul className={s.list}>\r\n    {contacts.map(({ id, name, number }) => (\r\n      <li key={id} className={s.item}>\r\n        {name} : {number}\r\n        <button className={s.button} type=\"button\" onClick={() => dispatch(deleteContact(id))}>\r\n          Delete\r\n        </button>\r\n      </li>\r\n    ))}\r\n   </ul>\r\n  )\r\n}\r\nexport default ListContacts;\r\n\r\n\r\n","import { changeFilter } from '../../redux/contacts-actions';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getFilter } from '../../redux/contacts-selectors';\r\nimport s from './Filter.module.css';\r\n\r\nexport default function Filter() {\r\n  const value = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  const onChangeHandler = e => {\r\n    dispatch(changeFilter(e.target.value));\r\n    };\r\n\r\n  const onBlurHandler = () => {\r\n    dispatch(changeFilter(''));\r\n  };\r\n\r\n  return (\r\n    <label className={s.label}>\r\n      Find contacts by name\r\n      <input\r\n        className={s.input}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChangeHandler}\r\n        onBlur={onBlurHandler}\r\n      />\r\n    </label>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n","import Container from '../Container/Container';\r\nimport Form from '../Form/Form.jsx';\r\nimport ListContacts from '../ListContacts/ListContacts.jsx';\r\nimport Filter from '../Filter/Filter.jsx';\r\nimport s from './App.module.css';\r\n\r\nexport default function App() {\r\n  return (\r\n    <Container>\r\n      <h1 className={s.title}>Phonebook</h1>\r\n      <Form/>\r\n      <h2 className={s.contacts}>Contacts</h2>\r\n      <Filter />\r\n      <ListContacts />\r\n    </Container>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { store, persistor} from './redux/store';\r\nimport { PersistGate } from 'redux-persist/lib/integration/react';\r\nimport App from './components/App/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <PersistGate loading={null} persistor={persistor}>\r\n        <BrowserRouter>\r\n          <App />\r\n        </BrowserRouter>\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Form_input__364WP\",\"form\":\"Form_form__36bZW\",\"button\":\"Form_button__2wT4m\",\"label\":\"Form_label__2te7R\"};"],"sourceRoot":""}